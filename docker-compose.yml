networks:
    appserve:
        driver: bridge

services:

    nginx:
        container_name: nginx
        build:
            context: .docker/nginx
            dockerfile: Dockerfile
        ports:
            - "80:80"
            - "443:443"
        tty: true

        volumes:
            - ./:/var/www/html
            - .docker/nginx/appserve.conf:/etc/nginx/conf.d/default.conf
            - .docker/nginx/ssl:/etc/nginx/ssl

        depends_on:
            - php
        networks:
            - appserve
    php:
        container_name: php
        build:
            context: .docker/php
            dockerfile: Dockerfile
        volumes:
            - ./:/var/www/html
            - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
        ports:
            - 9000:9000
        networks:
            - appserve

    mysql:
        container_name: mysql
        image: "mysql:latest"
        restart: always
        platform: 'linux/x86_64'
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        volumes:
            - ".docker/mysql:/var/lib/mysql:rw"
        user: mysql
        networks:
            - appserve

    redis:
        container_name: redis
        image: 'redis:latest'
        tty: true
        ports:
            - '6379:6379'
        networks:
            - appserve

    artisan:
        container_name: artisan
        build:
            context: .docker/php
            dockerfile: Dockerfile
        volumes:
            - ./:/var/www/html
        working_dir: /var/www/html
        entrypoint: [ "php","/var/www/html/artisan" ]
        networks:
            - appserve

    npm:
        container_name: npm
        image: node:latest
        volumes:
            - ./:/var/www/html
        working_dir: /var/www/html
        entrypoint: [ 'npm' ]
        networks:
            - appserve

    yarn:
        container_name: yarn
        image: node:latest
        volumes:
            - ./:/var/www/html
        working_dir: /var/www/html
        entrypoint: [ 'yarn' ]
        networks:
            - appserve

    mailhog:
        container_name: mailhog
        image: "mailhog/mailhog:latest"
        ports:
            - 1025:1025
            - 8025:8025
        networks:
            - appserve
